---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version.split('.')[0] }}.yml"
    - "{{ ansible_os_family | lower }}.yml"
  tags:
    - always

- include: cinder_pre_install.yml
  tags:
    - cinder-install

- include: cinder_install.yml
  tags:
    - cinder-install

- name: refresh local facts
  setup:
    filter: ansible_local
    gather_subset: "!all"
  tags:
    - cinder-config

- include: cinder_cleanup_old_facts.yml
  when:
    - "'need_db_sync' in ansible_local['openstack_ansible']['cinder']"
  tags:
    - cinder-config

- include: cinder_post_install.yml
  tags:
    - cinder-config

- include: cinder_db_setup.yml
  static: no
  when:
    - "groups['cinder_api'] | length > 0"
    - "cinder_services['cinder-api']['group'] in group_names"
    - "inventory_hostname == ((groups['cinder_api'] | intersect(ansible_play_hosts)) | list)[0]"
  tags:
    - cinder-config

- include: cinder_uwsgi.yml
  tags:
    - cinder-config

- include: cinder_service_setup.yml
  static: no
  when:
    - "groups['cinder_api'] | length > 0"
    - "cinder_services['cinder-api']['group'] in group_names"
    - "inventory_hostname == ((groups['cinder_api'] | intersect(ansible_play_hosts)) | list)[0]"
  tags:
    - cinder-config

- name: Run the systemd service role
  include_role:
    name: systemd_service
    private: true
  vars:
    systemd_user_name: "{{ cinder_system_user_name }}"
    systemd_group_name: "{{ cinder_system_group_name }}"
    systemd_tempd_prefix: openstack
    systemd_slice_name: cinder
    system_lock_path: /var/lock/cinder
    systemd_CPUAccounting: true
    systemd_BlockIOAccounting: true
    systemd_MemoryAccounting: true
    systemd_TasksAccounting: true
    systemd_services:
      - service_name: "{{ service_var.service_name }}"
        enabled: yes
        state: started
        execstarts: "{{ service_var.execstarts }}"
        execreloads: "{{ service_var.execreloads | default([]) }}"
        config_overrides: "{{ service_var.init_config_overrides }}"
  with_items: "{{ filtered_cinder_services }}"
  loop_control:
    loop_var: service_var
  tags:
    - cinder-config

- name: Include ceph_client role
  include_role:
    name: ceph_client
  vars:
    openstack_service_system_user: "{{ cinder_system_user_name }}"
    openstack_service_venv_bin: "{{ cinder_bin }}"
  when:
    - "cinder_services['cinder-volume']['group'] in group_names"
    - "cinder_backend_rbd_inuse | bool"
  tags:
    - ceph

- name: Flush handlers
  meta: flush_handlers

- include: cinder_backends.yml
  static: no
  when:
    - "groups[cinder_services['cinder-volume']['group']] | length > 0"
    - "cinder_services['cinder-api']['group'] in group_names"
    - "inventory_hostname == ((groups[cinder_services['cinder-api']['group']] | intersect(ansible_play_hosts)) | list)[-1]"
  tags:
    - cinder-config

- include: cinder_lvm_config.yml
  when:
    - "cinder_services['cinder-volume']['group'] in group_names"
    - "cinder_backend_lvm_inuse | bool"
  tags:
    - cinder-config
